services:
  db:
    image: postgres:16-alpine
    container_name: dbase_pg
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 20

  importer:
    build: ./importer
    container_name: dbase_importer
    env_file: .env
    volumes:
      - ./data:/data:ro
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "convert_dbase.py"]

  api:
    build: ./api
    container_name: dbase_api
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  tools:
    build: ./scripts
    container_name: dbase_tools
    env_file: .env
    working_dir: /workspace
    volumes:
      - ./:/workspace:rw
    # default command overridden per use via `docker compose run --rm tools ...`
    command: ["python", "--version"]

  tester:
    build:
      context: .
      dockerfile: ./tester/Dockerfile
    container_name: dbase_tester
    env_file: .env
    environment:
      PYTHONPATH: /workspace
      API_BASE_URL: http://api:8000
    working_dir: /workspace
    volumes:
      - ./:/workspace:rw
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_started
    # default command runs all tests
    command: ["pytest", "-q"]

volumes:
  pgdata:
    driver: local
